{"version":3,"file":"main.bundle.js","mappings":";;;;;;;;;;;;;;;;;;;;;AAA+C;AACO;AACtD,mEAAc,CAAC,kDAAI;AACkB;;;;;;;;;;;;;;;;;;;;;ACHrC;AACO;AACP;AACA;;;AAGA;;AAEA,oDAAoD,8BAA8B;;AAElF;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,4BAA4B,eAAe,mBAAmB,MAAM;;AAEpE;AACA,QAAQ,kBAAkB;AAC1B;AACA;AACA;AACO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;;AAEO;;AAEA;AACP;AACA;;;;;;;;;;;;;;;;;AC7KA,iBAAiB,SAAI,IAAI,SAAI;AAC7B,4BAA4B,+DAA+D,iBAAiB;AAC5G;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC;AAChC;AACA,KAAK;AACL;AACA,mBAAmB,SAAI,IAAI,SAAI;AAC/B,cAAc,6BAA6B,0BAA0B,cAAc,qBAAqB;AACxG,iBAAiB,oDAAoD,qEAAqE,cAAc;AACxJ,uBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC,mCAAmC,SAAS;AAC5C,mCAAmC,WAAW,UAAU;AACxD,0CAA0C,cAAc;AACxD;AACA,8GAA8G,OAAO;AACrH,iFAAiF,iBAAiB;AAClG,yDAAyD,gBAAgB,QAAQ;AACjF,+CAA+C,gBAAgB,gBAAgB;AAC/E;AACA,kCAAkC;AAClC;AACA;AACA,UAAU,YAAY,aAAa,SAAS,UAAU;AACtD,oCAAoC,SAAS;AAC7C;AACA;AACwC;AACxC;AACA;AACA;AACA;AACA;AACA,eAAe,kDAAQ;AACvB;AACA;AACA,8BAA8B,wCAAwC,mCAAmC;AACzG;AACA;AACA,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,yBAAyB;AAC/C,0BAA0B,wBAAwB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC","sources":["webpack://wasm-ts-rust/../pkg/wasm_ts_rust.js","webpack://wasm-ts-rust/../pkg/wasm_ts_rust_bg.js","webpack://wasm-ts-rust/./src/index.ts"],"sourcesContent":["import * as wasm from \"./wasm_ts_rust_bg.wasm\";\nimport { __wbg_set_wasm } from \"./wasm_ts_rust_bg.js\";\n__wbg_set_wasm(wasm);\nexport * from \"./wasm_ts_rust_bg.js\";\n","let wasm;\nexport function __wbg_set_wasm(val) {\n    wasm = val;\n}\n\n\nconst lTextDecoder = typeof TextDecoder === 'undefined' ? (0, module.require)('util').TextDecoder : TextDecoder;\n\nlet cachedTextDecoder = new lTextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nlet cachedUint8Memory0 = null;\n\nfunction getUint8Memory0() {\n    if (cachedUint8Memory0 === null || cachedUint8Memory0.byteLength === 0) {\n        cachedUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachedUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n    ptr = ptr >>> 0;\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n\nlet cachedInt32Memory0 = null;\n\nfunction getInt32Memory0() {\n    if (cachedInt32Memory0 === null || cachedInt32Memory0.byteLength === 0) {\n        cachedInt32Memory0 = new Int32Array(wasm.memory.buffer);\n    }\n    return cachedInt32Memory0;\n}\n\nfunction notDefined(what) { return () => { throw new Error(`${what} is not defined`); }; }\n\nconst UniverseFinalization = (typeof FinalizationRegistry === 'undefined')\n    ? { register: () => {}, unregister: () => {} }\n    : new FinalizationRegistry(ptr => wasm.__wbg_universe_free(ptr >>> 0));\n/**\n*/\nexport class Universe {\n\n    static __wrap(ptr) {\n        ptr = ptr >>> 0;\n        const obj = Object.create(Universe.prototype);\n        obj.__wbg_ptr = ptr;\n        UniverseFinalization.register(obj, obj.__wbg_ptr, obj);\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n        UniverseFinalization.unregister(this);\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_universe_free(ptr);\n    }\n    /**\n    * @param {number} height\n    * @param {number} width\n    * @returns {Universe}\n    */\n    static new(height, width) {\n        const ret = wasm.universe_new(height, width);\n        return Universe.__wrap(ret);\n    }\n    /**\n    * @returns {number}\n    */\n    area() {\n        const ret = wasm.universe_area(this.__wbg_ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @param {number} row\n    * @param {number} col\n    * @returns {number}\n    */\n    to_idx(row, col) {\n        const ret = wasm.universe_to_idx(this.__wbg_ptr, row, col);\n        return ret >>> 0;\n    }\n    /**\n    */\n    advance_generation() {\n        wasm.universe_advance_generation(this.__wbg_ptr);\n    }\n    /**\n    * @returns {string}\n    */\n    to_string_universe() {\n        let deferred1_0;\n        let deferred1_1;\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.universe_to_string_universe(retptr, this.__wbg_ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            deferred1_0 = r0;\n            deferred1_1 = r1;\n            return getStringFromWasm0(r0, r1);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n            wasm.__wbindgen_free(deferred1_0, deferred1_1, 1);\n        }\n    }\n    /**\n    * @param {number} alive_prob\n    */\n    set_random(alive_prob) {\n        wasm.universe_set_random(this.__wbg_ptr, alive_prob);\n    }\n    /**\n    * @returns {number}\n    */\n    count_alive_cells() {\n        const ret = wasm.universe_count_alive_cells(this.__wbg_ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @param {number} row\n    * @param {number} col\n    */\n    toggle_cell(row, col) {\n        wasm.universe_toggle_cell(this.__wbg_ptr, row, col);\n    }\n    /**\n    * @param {number} row\n    * @param {number} col\n    * @returns {boolean}\n    */\n    is_alive(row, col) {\n        const ret = wasm.universe_is_alive(this.__wbg_ptr, row, col);\n        return ret !== 0;\n    }\n    /**\n    */\n    clear_cells() {\n        wasm.universe_clear_cells(this.__wbg_ptr);\n    }\n    /**\n    * @param {number} height\n    * @param {number} width\n    */\n    set_size(height, width) {\n        wasm.universe_set_size(this.__wbg_ptr, height, width);\n    }\n    /**\n    * @returns {number}\n    */\n    height() {\n        const ret = wasm.universe_height(this.__wbg_ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @returns {number}\n    */\n    width() {\n        const ret = wasm.universe_width(this.__wbg_ptr);\n        return ret >>> 0;\n    }\n}\n\nexport const __wbg_random_1385edd75e02760c = typeof Math.random == 'function' ? Math.random : notDefined('Math.random');\n\nexport function __wbindgen_throw(arg0, arg1) {\n    throw new Error(getStringFromWasm0(arg0, arg1));\n};\n\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport { Universe } from \"wasm-ts-rust\";\nvar CELL_SIZE = 10;\nvar CELL_MARGIN_SIZE = 1;\nvar GRID_COLOR = \"#CCCCCC\";\nvar DEAD_COLOR = \"#FFFFFF\";\nvar ALIVE_COLOR = \"#000000\";\nvar universe = Universe.new(64, 64);\nvar in_play = false;\nvar animationId = null;\nvar sleep = function (msec) { return new Promise(function (resolve) { return setTimeout(resolve, msec); }); };\nvar autoAdvanceSpeedRange = document.getElementById(\"auto-advance-interval-range\");\nautoAdvanceSpeedRange.value = \"50\";\nvar autoAdvanceUniverse = function () { return __awaiter(void 0, void 0, void 0, function () {\n    var frequency;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (in_play) {\n                    universe.advance_generation();\n                }\n                frequency = Math.pow(2, Number(autoAdvanceSpeedRange.value) / 10);\n                return [4 /*yield*/, sleep(1000.0 / frequency)];\n            case 1:\n                _a.sent();\n                autoAdvanceUniverse();\n                return [2 /*return*/];\n        }\n    });\n}); };\nautoAdvanceUniverse();\nvar autoAdvanceGenerations = function () {\n    drawUniverse();\n    animationId = requestAnimationFrame(autoAdvanceGenerations);\n};\nvar set_play_pause = function (play) {\n    in_play = play;\n    if (in_play) {\n        playPauseButton.textContent = \"Pause\";\n        autoAdvanceGenerations();\n    }\n    else {\n        playPauseButton.textContent = \"Play\";\n        cancelAnimationFrame(animationId);\n        animationId = null;\n    }\n};\nvar toggle_play_pause = function () {\n    set_play_pause(!in_play);\n};\nvar playPauseButton = document.getElementById(\"play-pause-button\");\nplayPauseButton.addEventListener(\"click\", function (event) {\n    toggle_play_pause();\n});\nvar advanceGenerationButton = document.getElementById(\"advance-generation-button\");\nadvanceGenerationButton.addEventListener(\"click\", function (event) {\n    set_play_pause(false);\n    universe.advance_generation();\n    drawUniverse();\n});\nvar setRandomButton = document.getElementById(\"set-random-button\");\nsetRandomButton.addEventListener(\"click\", function (event) {\n    set_play_pause(false);\n    universe.set_random(0.5);\n    drawUniverse();\n});\nvar clearCellsButton = document.getElementById(\"clear-cells-button\");\nclearCellsButton.addEventListener(\"click\", function (event) {\n    set_play_pause(false);\n    universe.clear_cells();\n    drawUniverse();\n});\nvar UniverseCanvas = document.getElementById(\"universe-canvas\");\nvar UniverseCanvasContext = UniverseCanvas.getContext(\"2d\");\nvar drawUniverse = function () {\n    UniverseCanvas.height = (CELL_SIZE + CELL_MARGIN_SIZE) * universe.height() + CELL_MARGIN_SIZE;\n    UniverseCanvas.width = (CELL_SIZE + CELL_MARGIN_SIZE) * universe.width() + CELL_MARGIN_SIZE;\n    UniverseCanvasContext.fillStyle = GRID_COLOR;\n    UniverseCanvasContext.fillRect(0, 0, UniverseCanvas.height, UniverseCanvas.width);\n    for (var row = 0; row < universe.height(); row++) {\n        for (var col = 0; col < universe.width(); col++) {\n            UniverseCanvasContext.fillStyle = universe.is_alive(row, col)\n                ? ALIVE_COLOR\n                : DEAD_COLOR;\n            UniverseCanvasContext.fillRect((CELL_SIZE + CELL_MARGIN_SIZE) * col + CELL_MARGIN_SIZE, (CELL_SIZE + CELL_MARGIN_SIZE) * row + CELL_MARGIN_SIZE, CELL_SIZE, CELL_SIZE);\n        }\n    }\n};\ndrawUniverse();\nUniverseCanvas.addEventListener(\"click\", function (event) {\n    var boundingRect = UniverseCanvas.getBoundingClientRect();\n    var scaleX = UniverseCanvas.width / boundingRect.width;\n    var scaleY = UniverseCanvas.height / boundingRect.height;\n    var canvasLeft = (event.clientX - boundingRect.left) * scaleX;\n    var canvasTop = (event.clientY - boundingRect.top) * scaleY;\n    var row = Math.min(Math.floor(canvasTop / (CELL_SIZE + 1)), universe.height() - 1);\n    var col = Math.min(Math.floor(canvasLeft / (CELL_SIZE + 1)), universe.width() - 1);\n    universe.toggle_cell(row, col);\n    drawUniverse();\n});\n"],"names":[],"sourceRoot":""}